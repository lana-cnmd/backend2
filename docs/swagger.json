{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the Shop application.",
        "title": "Shop API Documentation",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/clients": {
            "get": {
                "description": "Returns a list of all clients with optional pagination (limit/offset)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get all clients",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of clients per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Skip first N clients",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of clients",
                        "schema": {
                            "$ref": "#/definitions/handlers.getAllClientsResponse"
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid limit/offset values'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Failed to retrieve clients'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a client with the provided personal details and returns its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Create a new client",
                "parameters": [
                    {
                        "description": "Client details",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'id': 123}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid request body'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Failed to create client'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/search": {
            "get": {
                "description": "Finds a client by their first and last name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Search client by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client's first name",
                        "name": "first_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client's last name",
                        "name": "last_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client details",
                        "schema": {
                            "$ref": "#/definitions/types.SearchClientResponse"
                        }
                    },
                    "400": {
                        "description": "{'message': 'empty first or last name'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "404": {
                        "description": "{'message': 'Client not found'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Internal server error'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}": {
            "delete": {
                "description": "Removes a client from the database by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Delete a client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'Status': 'ok'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid client ID'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "404": {
                        "description": "{'message': 'Client not found'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Failed to delete client'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}/address": {
            "put": {
                "description": "Partially updates the address details of a client by their ID (at least one field must be provided)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Update client's address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New address details (at least one field required)",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateAddressInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'Status': 'ok'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid request parameters'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "404": {
                        "description": "{'message': 'Client not found'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Internal server error'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "description": "Returns a list of all products available in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get all products",
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "$ref": "#/definitions/handlers.getAllProductsResponse"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Failed to retrieve products'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a product with the provided details and returns its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'id': 123}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid request body'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Failed to create product'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "description": "Retrieves a product's information by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product details by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "schema": {
                            "$ref": "#/definitions/types.GetProductResponce"
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid product ID'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "404": {
                        "description": "{'message': 'Product not found'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Internal server error'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a product from the database by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'Status': 'ok'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid product ID'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "404": {
                        "description": "{'message': 'Product not found'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Internal server error'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}/decrease-amount": {
            "put": {
                "description": "Reduces the available stock of a product by a specified amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Decrease product stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Amount to decrease (minimum 1)",
                        "name": "decrease_amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'message': 'Product amount decreased successfully'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "{'message': 'Invalid request parameters'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "404": {
                        "description": "{'message': 'Product not found'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "409": {
                        "description": "{'message': 'Not enough stock to decrease'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    },
                    "500": {
                        "description": "{'message': 'Internal server error'}",
                        "schema": {
                            "$ref": "#/definitions/handlers.myError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.getAllClientsResponse": {
            "description": "Clients list response container",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.SearchClientResponse"
                    }
                }
            }
        },
        "handlers.getAllProductsResponse": {
            "description": "Product list response container",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GetProductResponce"
                    }
                }
            }
        },
        "handlers.myError": {
            "description": "Error response object",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "types.CreateClientRequest": {
            "description": "Client creation request object",
            "type": "object",
            "properties": {
                "birthday": {
                    "$ref": "#/definitions/types.CustomTime"
                },
                "city": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_surname": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "types.CreateProductRequest": {
            "description": "Product creation request object",
            "type": "object",
            "properties": {
                "available_stock": {
                    "description": "число закупленных экземпляров товара",
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "supplier_id": {
                    "type": "integer"
                }
            }
        },
        "types.CustomTime": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                }
            }
        },
        "types.GetProductResponce": {
            "description": "Product details response object",
            "type": "object",
            "properties": {
                "available_stock": {
                    "description": "число закупленных экземпляров товара",
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "last_update_date": {
                    "description": "число последней закупки",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "supplier_id": {
                    "type": "integer"
                }
            }
        },
        "types.SearchClientResponse": {
            "description": "Client details response object",
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_surname": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "registration_date": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "types.UpdateAddressInput": {
            "description": "Address update request object (supports partial updates)",
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        }
    }
}